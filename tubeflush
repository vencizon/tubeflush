#!/bin/bash

NAME=tubeflush
VERSION=development-version

USAGE="$NAME - version $VERSION\n
\n
Usage: $NAME [-eV|N|G|L] [-d|-s|-i] [FILE] [-f] [FORMAT] [-r] [-n] [DIRECTORY]\n
\n
Options:\n
\n
-e\t\tSelect the editor\n
\t\tV - VIM\n
\t\tN - NANO\n
\t\tG - GEDIT\n
\t\tL - LEAFPAD [Default]\n
\n
-d\t\tInsert URLs to download in a new created file\n
\n
-s\t\tSearch on YouTube\n
\n
-i\t\tInput [FILE]\n
\n
-f\t\tFormat:\n
\t\taac\n
\t\tvorbis\n
\t\tmp3 [Default]\n
\t\tm4a\n
\t\topus\n
\t\twav\n
\n
-n\t\tdirectory where you want to save file.
\n
-r\t\tdon't remove temporary files.
"
FINISHDIR="$(pwd)"
DIR="/tmp/tubeflush"
FORMAT=mp3
EDITOR=leafpad
NOREMOVE=FALSE

if [ $# -lt 1  ];then
	echo -e $USAGE
	exit 1
fi
if [ ! -d "$DIR"  ]; then
	mkdir -p "$DIR" # create working directory
fi


## FUNCTION ##
function search {
	rm "$DIR"/temp 2>/dev/null
	SEARCH1="https://gdata.youtube.com/feeds/api/videos?q="
	for (( i = 1; i <= 10; i++ )); do
		SEARCH2="&orderby=published&start-index="$i"&max-results=1&v=2&alt=json"
		rpc="$(curl -s "$SEARCH1""$1""$SEARCH2")"
		file[i]="$(echo $rpc | jshon -e feed -e entry -a -e title -e '$t' -u -p -p -e id -e '$t' -u n )" 
		echo ${file[i]}  >> "$DIR"/temp
	done	
	for (( i = 1; i <= 10; i++ )); do
		stamp[i]="$(cat "$DIR"/temp | head -"$i" | tail -1 | rev | cut -d " " -f2- | rev)"
		echo "$i) ${stamp[i]}"
	done
	echo "Select number:"
	read __N
	echo "Download of: ${stamp[__N]}"
	id="$(cat "$DIR"/temp | head -"$__N" | tail -1 | rev | cut -d: -f1 | rev)"
	echo https://www.youtube.com/watch?v=$id >> "$DIR"/list 

}

while getopts "e:i: d f: r n: s:" opt
do
	case "$opt" in
		"e")
			if [ "${#OPTARG}" != "1" ]; then	
				echo "You can choose only one text editor."
				echo 
				echo -e $USAGE
				exit 1
			else
				case "$OPTARG" in
					'V'|'v')
						EDITOR=vim
						;;
					'N'|'n')
						EDITOR=nano
						;;
					'G'|'g')
						EDITOR=gedit
						;;
					'L'|'l')
						EDITOR=leafpad
						;;
					*)
						echo -e "\tERROR"
						echo -e $USAGE
						exit 1
						;;
				esac
			fi
			;;

		"n")
			FINISHDIR=$OPTARG
			;;
		"i")
			if [ $# -lt 2 ];then
				echo "error arguments"
				echo -e $USAGE
				exit 1
			elif [ $# -gt 2 ];then
				if [ "$1" == "-i" ];then
				       if [ "${2:0:1}" != "-" ];then
					       cp "$2" "$DIR"/input_file_for_download
					       FILE="$DIR"/input_file_for_download
				       else
					       echo -e "\tERROR"
					       echo -e $USAGE
					       exit 1
				       fi
				fi
			else
				echo -e "\tERROR"
				echo -e $USAGE
				exit 1
			fi
			;;
			
		"d")
			FILE="$DIR"/input_file_for_download
			touch $FILE
			$EDITOR $FILE
			;;
		"f")
			FORMAT=$OPTARG
			;;
		"r")	
			NOREMOVE=TRUE
			;;
		"s")
			search $OPTARG
			FILE="$DIR"/list
			;;
		":")
			echo "no argument."
			exit 1
			;;
		"?")
			echo -e "\tERROR"
			echo -e $USAGE
			exit 1
			;;
			
		*)
			echo "\tERROR"
			exit 1
			;;
	esac
done

if [ ! -d "$FINISHDIR" ]; then	# check if directory exist
	echo -e "$FINISHDIR doesn't exists. Create now..."
	mkdir -p "$FINISHDIR"
fi

cd "$DIR"
URLNUMBER=0
for URL in `cat $FILE`; do
	((URLNUMBER++))	
	LIST[$URLNUMBER]=$URL	# LIST[i] is an array that contains all link found in $FILE
done
_num="$(cat $FILE | wc -w)" # count number of link
if [ $_num -eq 0 ]; then	# if there aren't link, exit 1 and 
	echo "No link found..."
	echo -e $USAGE
	exit 1
else
	for (( i = 1; i<= "$URLNUMBER"; i++ )); do
		youtube-dl "${LIST[i]}" --title --continue --no-overwrites --extract-audio --audio-format $FORMAT 
		if [ "$FORMAT" = "vorbis" ]; then
			mv "$DIR"/*.ogg "$FINISHDIR"/ || exit 1
		else
			mv "$DIR"/*."$FORMAT" "$FINISHDIR" || exit 1
		fi
	done
fi
if [ "$NOREMOVE" = "FALSE" ]; then
	rm -rf $DIR
fi
cd
exit 0
